[kernel] Parsing atoi.c (with preprocessing)
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  
[eva:alarm] atoi.c:6: Warning: 
  accessing uninitialized left-value. assert \initialized(&input);
[eva] done for function main
[eva] atoi.c:6: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  1 function analyzed (out of 1): 100% coverage.
  In this function, 4 statements reached (out of 25): 16% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  No logical properties have been reached by the analysis.
  ----------------------------------------------------------------------------
[pdg] computing for function main
[pdg] atoi.c:24: Warning: no final state. Probably unreachable...
[pdg] done for function main
[pdg] ====== PDG GRAPH COMPUTED ======
[pdg] PDG for main
 {n1}: InCtrl
 {n2}: VarDecl : input
 {n3}: VarDecl : res
 {n4}: VarDecl : sign
 {n5}: VarDecl : __retres
 {n6}: int res = 0;
   -[-c-]-> 1
   -[a--]-> 3
 {n7}: int sign = 1;
   -[-c-]-> 1
   -[a--]-> 4
 {n8}: while(1)
   -[-c-]-> 1
 {n9}: (int)*input == ' '
   -[-c-]-> 1
   -[--d]-> 2
 {n10}: (int)*input == '\t'
   -[-c-]-> 1
   -[--d]-> 2
 {n11}: break;
   -[-c-]-> 1
 {n12}: (int)*input == '-'
   -[-c-]-> 1
   -[--d]-> 2
 {n13}: (int)*input == '+'
   -[-c-]-> 1
   -[--d]-> 2
 {n14}: while(1)
   -[-c-]-> 1
   -[-c-]-> 16
   -[-c-]-> 22
 {n15}: (int)*input != '\000'
   -[-c-]-> 1
   -[--d]-> 2
   -[-c-]-> 16
   -[-c-]-> 22
 {n16}: block
   -[-c-]-> 1
   -[-c-]-> 16
   -[-c-]-> 22
 {n17}: (int)*input >= '0'
   -[-c-]-> 1
   -[--d]-> 2
   -[-c-]-> 16
   -[-c-]-> 22
 {n18}: (int)*input <= '9'
   -[-c-]-> 1
   -[--d]-> 2
   -[-c-]-> 16
   -[-c-]-> 22
 {n19}: goto _LAND;
   -[-c-]-> 1
   -[-c-]-> 16
   -[-c-]-> 20
   -[-c-]-> 22
 {n20}: _LAND:
   -[-c-]-> 1
   -[-c-]-> 16
   -[-c-]-> 22
 {n21}: break;
   -[-c-]-> 1
   -[-c-]-> 16
   -[-c-]-> 22
 {n22}: block
   -[-c-]-> 1
   -[-c-]-> 16
   -[-c-]-> 22
 {n23}: break;
   -[-c-]-> 1
   -[-c-]-> 16
   -[-c-]-> 22
 {n24}: return __retres;
   -[-c-]-> 1
   -[--d]-> 5
 {n25}: OutRet
